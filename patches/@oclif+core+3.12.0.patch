diff --git a/node_modules/@oclif/core/lib/help/util.js b/node_modules/@oclif/core/lib/help/util.js
index 6c97a31..3a7ace6 100644
--- a/node_modules/@oclif/core/lib/help/util.js
+++ b/node_modules/@oclif/core/lib/help/util.js
@@ -43,7 +43,7 @@ function collateSpacedCmdIDFromArgs(argv, config) {
         const ids = (0, util_1.collectUsableIds)(config.commandIDs);
         const final = [];
         const idPresent = (id) => ids.has(id);
-        const finalizeId = (s) => (s ? [...final, s].join(':') : final.join(':'));
+        const finalizeId = (s) => (s ? [...final, s] : final).filter(Boolean).join(':');
         const hasArgs = () => {
             const id = finalizeId();
             if (!id)
diff --git a/node_modules/@oclif/core/lib/interfaces/parser.d.ts b/node_modules/@oclif/core/lib/interfaces/parser.d.ts
index acb8583..2d53745 100644
--- a/node_modules/@oclif/core/lib/interfaces/parser.d.ts
+++ b/node_modules/@oclif/core/lib/interfaces/parser.d.ts
@@ -200,6 +200,7 @@ export type OptionFlagProps = FlagProps & {
     helpValue?: string;
     options?: readonly string[];
     multiple?: boolean;
+    singleValue?: boolean;
     /**
      * Delimiter to separate the values for a multiple value flag.
      * Only respected if multiple is set to true. Default behavior is to
diff --git a/node_modules/@oclif/core/lib/parser/parse.js b/node_modules/@oclif/core/lib/parser/parse.js
index 032063d..72d2ed5 100644
--- a/node_modules/@oclif/core/lib/parser/parse.js
+++ b/node_modules/@oclif/core/lib/parser/parse.js
@@ -145,7 +145,7 @@ class Parser {
                     continue;
                 }
             }
-            if (parsingFlags && this.currentFlag && this.currentFlag.multiple) {
+            if (parsingFlags && this.currentFlag && this.currentFlag.multiple && !this.currentFlag.singleValue) {
                 this.raw.push({ flag: this.currentFlag.name, input, type: 'flag' });
                 continue;
             }
