---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ id }}-sa
  namespace: {{ namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ id }}-dc
  namespace: {{ namespace }}
data:
  daemon.json: |
    {
      "tls": false,
      "data-root": "/data/docker"
    }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ id }}
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/component: docker-host
spec:
  replicas: 1
  selector:
    matchLabels:
      {% for k, v in labels %}
      {{ k }}: {{ v }}
      {% endfor %}
  template:
    metadata:
      labels:
        {% for k, v in labels %}
        {{ k }}: {{ v }}
        {% endfor %}
    spec:
      serviceAccountName: {{ id }}-sa
      containers:
      - name: docker
        image: docker:24-dind
        securityContext:
          privileged: true
        command: ["dockerd", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]
        volumeMounts:
        - name: docker-config
          mountPath: /etc/docker
        - name: data
          mountPath: /data
      volumes:
      - name: docker-config
        configMap:
          name: {{ id }}-dc
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {% for k, v in labels %}
        {{ k }}: {{ v }}
        {% endfor %}
    spec:
      accessModes: ["ReadWriteOnce"]
{% if storageClass %}
      storageClassName: "{{ storageClass }}"
{% endif %}
      resources:
        requests:
          storage: {{ storageSize }}Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ id }}-role
  namespace: {{ namespace }}
rules:
- apiGroups:
    - metrics.k8s.io
    - ""
  resources:
    - pods
  verbs:
    - get
    - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ id }}-rolebind
  namespace: {{ namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ id }}-role
subjects:
- kind: ServiceAccount
  name: {{ id }}-sa
